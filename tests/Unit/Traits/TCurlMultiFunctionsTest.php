<?php

namespace AlxDorosenco\CurlPhp\Tests\Unit\Traits;

use AlxDorosenco\CurlPhp\Traits\TCurlMultiFunctions;
use PHPUnit\Framework\TestCase;

class TCurlMultiFunctionsTest extends TestCase
{
    private $trait;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->trait = new class {
            use TCurlMultiFunctions;

            public false|\CurlMultiHandle $multiHandle;

            public function __construct(){
                $this->multiHandle = curl_multi_init();
            }
        };
    }

    public function tearDown(): void
    {
        curl_multi_close($this->trait->multiHandle);

        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public static function errorCodeConstantsProvider(): array
    {
        return [
            [CURLE_OK],
            [CURLE_UNSUPPORTED_PROTOCOL],
            [CURLE_FAILED_INIT],
            [CURLE_URL_MALFORMAT],
            [CURLE_COULDNT_RESOLVE_HOST],
            [CURLE_COULDNT_RESOLVE_PROXY]
        ];
    }

    public function testAddHandleMethod(): void
    {
        $this->assertIsInt(
            $this->trait->addHandle(
                curl_init()
            )
        );
    }

    public function testCloseMethod(): void
    {
        $this->expectNotToPerformAssertions();

        $this->trait->close();
    }

    public function testErrNoMethod(): void
    {
        $this->assertIsInt($this->trait->errNo());
    }

    public function testExecMethod(): void
    {
        $this->assertIsInt($this->trait->exec());
    }

    public function testGetContentMethod(): void
    {
        $this->assertNull(
            $this->trait->getContent(
                curl_init()
            )
        );
    }

    public function testInfoReadMethod(): void
    {
        $this->assertIsBool(
            $this->trait->infoRead()
        );
    }

    public function testInitMethod(): void
    {
        $init = $this->trait->init();

        $this->assertIsObject($init);
        $this->assertSame(\CurlMultiHandle::class, get_class($init));
    }

    public function testRemoveHandleMethod(): void
    {
        $this->assertIsInt(
            $this->trait->removeHandle(
                curl_init()
            )
        );
    }

    public function testSelectMethod(): void
    {
        $this->assertIsInt(
            $this->trait->select()
        );
    }

    public function testSetOptMethod(): void
    {
        $opt = $this->trait->setOpt(CURLMOPT_MAX_PIPELINE_LENGTH, 255);

        $this->assertIsBool($opt);
    }

    /**
     * @dataProvider errorCodeConstantsProvider
     */
    public function testStrErrorMethod(int $value): void
    {
        $this->assertIsBool($this->trait->strError($value));
    }
}