<?php

namespace AlxDorosenco\CurlPhp\Tests\Unit\Builder;

use AlxDorosenco\CurlPhp\Builder\ABuilder;
use AlxDorosenco\CurlPhp\Builder\BuilderMultiOpts;
use PHPUnit\Framework\TestCase;

class BuilderMultiOptsTest extends TestCase
{
    private BuilderMultiOpts $builder;

    public function setUp(): void
    {
        $this->builder = new BuilderMultiOpts();

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @return array[]
     * @throws \Exception
     */
    public static function methodsProvider(): array
    {
        return [
            ['pipelining', random_int(1, 1000000)],
            ['maxConnects', random_int(1, 1000000)],
            ['chunkLengthPenaltySize', random_int(1, 1000000)],
            ['contentLengthPenaltySize', random_int(1, 1000000)],
            ['maxHostConnections', random_int(1, 1000000)],
            ['maxPipelineLength', random_int(1, 1000000)],
            ['maxTotalConnections', random_int(1, 1000000)],
            ['pushFunction', function(int $a, int $b) { return $a + $b; }]
        ];
    }

    /**
     * @dataProvider methodsProvider
     * @return void
     */
    public function testMethod(string $method, $value): void
    {
        $methodName = 'set'.ucfirst($method);

        $stub = $this->builder->$methodName($value);

        $this->assertIsObject($stub);
        $this->assertSame(ABuilder::class, get_parent_class($stub));
        $this->assertSame(BuilderMultiOpts::class, get_class($stub));
    }
}